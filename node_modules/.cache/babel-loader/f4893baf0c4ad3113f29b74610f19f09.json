{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\ReactWeb\\\\app_1\\\\src\\\\pages\\\\tiles.js\";\nimport React from \"react\";\nimport { Motion, spring } from \"react-motion\";\nimport { getMatrixPosition, getVisualPosition } from \"../pages/helper\";\nimport { TILE_COUNT, GRID_SIZE, BOARD_SIZE } from \"../pages/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tile(props) {\n  const {\n    tile,\n    index,\n    width,\n    height,\n    handleTileClick,\n    imgUrl\n  } = props;\n  console.log(\"img in tile\", imgUrl);\n  const {\n    row,\n    col\n  } = getMatrixPosition(index);\n  const visualPos = getVisualPosition(row, col, width, height);\n  const tileStyle = {\n    width: `calc(100% / ${GRID_SIZE})`,\n    height: `calc(100% / ${GRID_SIZE})`,\n    translateX: visualPos.x,\n    translateY: visualPos.y,\n    backgroundImage: `url(${imgUrl})`,\n    backgroundSize: `${BOARD_SIZE * 1.25}px`,\n    backgroundPosition: `${100 / GRID_SIZE * (tile % GRID_SIZE)}% ${100 / GRID_SIZE * Math.floor(tile / GRID_SIZE)}%`\n  };\n  const motionStyle = {\n    translateX: spring(visualPos.x),\n    translateY: spring(visualPos.y)\n  };\n  return /*#__PURE__*/_jsxDEV(Motion, {\n    style: motionStyle,\n    children: ({\n      translateX,\n      translateY\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      style: { ...tileStyle,\n        transform: `translate3d(${translateX}px, ${translateY}px, 0)`,\n        // Is last tile?\n        opacity: tile === TILE_COUNT - 1 ? 0 : 1\n      },\n      className: \"tile\",\n      onClick: () => handleTileClick(index),\n      children: !imgUrl && `${tile + 1}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Tile;\nexport default Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/ReactWeb/app_1/src/pages/tiles.js"],"names":["React","Motion","spring","getMatrixPosition","getVisualPosition","TILE_COUNT","GRID_SIZE","BOARD_SIZE","Tile","props","tile","index","width","height","handleTileClick","imgUrl","console","log","row","col","visualPos","tileStyle","translateX","x","translateY","y","backgroundImage","backgroundSize","backgroundPosition","Math","floor","motionStyle","transform","opacity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,cAA/B;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,iBAArD;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,UAAhC,QAAkD,oBAAlD;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,MAAtB;AAA8BC,IAAAA,eAA9B;AAA+CC,IAAAA;AAA/C,MAA0DN,KAAhE;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAA3B;AACA,QAAM;AAAEG,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAehB,iBAAiB,CAACQ,KAAD,CAAtC;AACA,QAAMS,SAAS,GAAGhB,iBAAiB,CAACc,GAAD,EAAMC,GAAN,EAAWP,KAAX,EAAkBC,MAAlB,CAAnC;AACA,QAAMQ,SAAS,GAAG;AAChBT,IAAAA,KAAK,EAAG,eAAcN,SAAU,GADhB;AAEhBO,IAAAA,MAAM,EAAG,eAAcP,SAAU,GAFjB;AAGhBgB,IAAAA,UAAU,EAAEF,SAAS,CAACG,CAHN;AAIhBC,IAAAA,UAAU,EAAEJ,SAAS,CAACK,CAJN;AAKhBC,IAAAA,eAAe,EAAG,OAAMX,MAAO,GALf;AAMhBY,IAAAA,cAAc,EAAG,GAAEpB,UAAU,GAAG,IAAK,IANrB;AAOhBqB,IAAAA,kBAAkB,EAAG,GAAG,MAAMtB,SAAP,IAAqBI,IAAI,GAAGJ,SAA5B,CAAuC,KAAK,MAAMA,SAAP,GAAqBuB,IAAI,CAACC,KAAL,CAAWpB,IAAI,GAAGJ,SAAlB,CAA8B;AAPrG,GAAlB;AAUA,QAAMyB,WAAW,GAAG;AAClBT,IAAAA,UAAU,EAAEpB,MAAM,CAACkB,SAAS,CAACG,CAAX,CADA;AAElBC,IAAAA,UAAU,EAAEtB,MAAM,CAACkB,SAAS,CAACK,CAAX;AAFA,GAApB;AAKA,sBACE,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAEM,WAAf;AAAA,cACG,CAAC;AAAET,MAAAA,UAAF;AAAcE,MAAAA;AAAd,KAAD,kBACC;AACE,MAAA,KAAK,EAAE,EACL,GAAGH,SADE;AAELW,QAAAA,SAAS,EAAG,eAAcV,UAAW,OAAME,UAAW,QAFjD;AAGL;AACAS,QAAAA,OAAO,EAAEvB,IAAI,KAAKL,UAAU,GAAG,CAAtB,GAA0B,CAA1B,GAA8B;AAJlC,OADT;AAOE,MAAA,SAAS,EAAC,MAPZ;AAQE,MAAA,OAAO,EAAE,MAAMS,eAAe,CAACH,KAAD,CARhC;AAAA,gBAUG,CAACI,MAAD,IAAY,GAAEL,IAAI,GAAG,CAAE;AAV1B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KAtCQF,I;AAwCT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport { Motion, spring } from \"react-motion\";\r\nimport { getMatrixPosition, getVisualPosition } from \"../pages/helper\";\r\nimport { TILE_COUNT, GRID_SIZE, BOARD_SIZE } from \"../pages/constants\"\r\n\r\nfunction Tile(props) {\r\n  const { tile, index, width, height, handleTileClick, imgUrl } = props;\r\n  console.log(\"img in tile\", imgUrl)\r\n  const { row, col } = getMatrixPosition(index);\r\n  const visualPos = getVisualPosition(row, col, width, height);\r\n  const tileStyle = {\r\n    width: `calc(100% / ${GRID_SIZE})`,\r\n    height: `calc(100% / ${GRID_SIZE})`,\r\n    translateX: visualPos.x,\r\n    translateY: visualPos.y,\r\n    backgroundImage: `url(${imgUrl})`,\r\n    backgroundSize: `${BOARD_SIZE * 1.25}px`,\r\n    backgroundPosition: `${(100 / GRID_SIZE) * (tile % GRID_SIZE)}% ${(100 / GRID_SIZE) * (Math.floor(tile / GRID_SIZE))}%`,\r\n\r\n  };\r\n  const motionStyle = {\r\n    translateX: spring(visualPos.x),\r\n    translateY: spring(visualPos.y)\r\n  }\r\n\r\n  return (\r\n    <Motion style={motionStyle}>\r\n      {({ translateX, translateY }) => (\r\n        <li\r\n          style={{\r\n            ...tileStyle,\r\n            transform: `translate3d(${translateX}px, ${translateY}px, 0)`,\r\n            // Is last tile?\r\n            opacity: tile === TILE_COUNT - 1 ? 0 : 1,\r\n          }}\r\n          className=\"tile\"\r\n          onClick={() => handleTileClick(index)}\r\n        >\r\n          {!imgUrl && `${tile + 1}`}\r\n        </li>\r\n      )}\r\n    </Motion>\r\n  );\r\n}\r\n\r\nexport default Tile;"]},"metadata":{},"sourceType":"module"}