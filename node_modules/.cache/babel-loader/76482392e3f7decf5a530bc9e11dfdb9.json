{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\ReactWeb\\\\app_1\\\\src\\\\pages\\\\art.js\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"../Styles/about.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n(function () {\n  var Game = React.createClass({\n    displayName: 'Game',\n    shuffle: function (array) {\n      // switches first two tiles\n      function switchTiles(array) {\n        var i = 0; // find the first two tiles in a row\n\n        while (!array[i] || !array[i + 1]) i++; // store tile value\n\n\n        var tile = array[i]; // switche values\n\n        array[i] = array[i + 1];\n        array[i + 1] = tile;\n        return array;\n      } // counts inversions\n\n\n      function countInversions(array) {\n        // make array of inversions\n        var invArray = array.map(function (num, i) {\n          var inversions = 0;\n\n          for (j = i + 1; j < array.length; j++) {\n            if (array[j] && array[j] < num) {\n              inversions += 1;\n            }\n          }\n\n          return inversions;\n        }); // return sum of inversions array\n\n        return invArray.reduce(function (a, b) {\n          return a + b;\n        });\n      } // fischer-yates shuffle algorithm\n\n\n      function fischerYates(array) {\n        var counter = array.length,\n            temp,\n            index; // While there are elements in the array\n\n        while (counter > 0) {\n          // Pick a random index\n          index = Math.floor(Math.random() * counter); // Decrease counter by 1\n\n          counter--; // And swap the last element with it\n\n          temp = array[counter];\n          array[counter] = array[index];\n          array[index] = temp;\n        }\n\n        return array;\n      } // Fischer-Yates shuffle\n\n\n      array = fischerYates(array); // check for even number of inversions\n\n      if (countInversions(array) % 2 !== 0) {\n        // switch two tiles if odd\n        array = switchTiles(array);\n      }\n\n      return array;\n    },\n    getInitialState: function () {\n      return {\n        // initial state of game board\n        tiles: this.shuffle([1, 2, 3, 4, 5, 6, 7, 8, '']),\n        win: false\n      };\n    },\n    checkBoard: function () {\n      var tiles = this.state.tiles;\n\n      for (var i = 0; i < tiles.length - 1; i++) {\n        if (tiles[i] !== i + 1) return false;\n      }\n\n      return true;\n    },\n    tileClick: function (tileEl, position, status) {\n      var tiles = this.state.tiles; // Possible moves\n      // [up,right,down,left]\n      // 9 = out of bounds\n\n      var moves = [[null, 1, 3, null], [null, 2, 4, 0], [null, null, 5, 1], [0, 4, 6, null], [1, 5, 7, 3], [2, null, 8, 4], [3, 7, null, null], [4, 8, null, 6], [5, null, null, 7]];\n\n      function animateTiles(i, move) {\n        var directions = ['up', 'right', 'down', 'left'];\n        var moveToEl = document.querySelector('.tile:nth-child(' + (move + 1) + ')');\n        direction = directions[i];\n        tileEl.classList.add('move-' + direction); // this is all a little hackish.\n        // css/js are used together to create the illusion of moving blocks\n\n        setTimeout(function () {\n          moveToEl.classList.add('highlight');\n          tileEl.classList.remove('move-' + direction); // time horribly linked with css transition\n\n          setTimeout(function () {\n            moveToEl.classList.remove('highlight');\n          }, 400);\n        }, 200);\n      } // called after tile is fully moved\n      // sets new state\n\n\n      function afterAnimate() {\n        tiles[position] = '';\n        tiles[move] = status;\n        this.setState({\n          tiles: tiles,\n          moves: moves,\n          win: this.checkBoard()\n        });\n      }\n\n      ; // return if they've already won\n\n      if (this.state.win) return; // check possible moves\n\n      for (var i = 0; i < moves[position].length; i++) {\n        var move = moves[position][i]; // if an adjacent tile is empty\n\n        if (typeof move === 'number' && !tiles[move]) {\n          animateTiles(i, move);\n          setTimeout(afterAnimate.bind(this), 200);\n          break;\n        }\n      }\n    },\n    restartGame: function () {\n      this.setState(this.getInitialState());\n    },\n    render: function () {\n      return React.DOM.div(null, React.DOM.div({\n        id: \"game-board\"\n      }, this.state.tiles.map(function (tile, position) {\n        return Tile({\n          status: tile,\n          key: position,\n          tileClick: this.tileClick\n        });\n      }, this)), Menu({\n        winClass: this.state.win ? 'button win' : 'button',\n        status: this.state.win ? 'You win!' : 'Solve the puzzle.',\n        restart: this.restartGame\n      }));\n    }\n  });\n  var Tile = React.createClass({\n    displayName: 'Tile',\n    clickHandler: function (e) {\n      this.props.tileClick(e.target, this.props.key, this.props.status);\n    },\n    render: function () {\n      return React.DOM.div({\n        className: \"tile\",\n        onClick: this.clickHandler\n      }, this.props.status);\n    }\n  });\n  var Menu = React.createClass({\n    displayName: 'Menu',\n    clickHandler: function () {\n      this.props.restart();\n    },\n    render: function () {\n      return React.DOM.div({\n        id: \"menu\"\n      }, React.DOM.h3({\n        id: \"subtitle\"\n      }, this.props.status), React.DOM.a({\n        className: this.props.winClass,\n        onClick: this.clickHandler\n      }, \"Restart\"));\n    }\n  }); // render Game to container\n\n  React.renderComponent(Game(null), document.getElementById('game-container'));\n})();\n\nfunction Art() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"game-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"title\",\n      children: \"ReactJS Slide Puzzle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"game-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Art;\nexport default Art;\n\nvar _c;\n\n$RefreshReg$(_c, \"Art\");","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/ReactWeb/app_1/src/pages/art.js"],"names":["React","Link","Game","createClass","displayName","shuffle","array","switchTiles","i","tile","countInversions","invArray","map","num","inversions","j","length","reduce","a","b","fischerYates","counter","temp","index","Math","floor","random","getInitialState","tiles","win","checkBoard","state","tileClick","tileEl","position","status","moves","animateTiles","move","directions","moveToEl","document","querySelector","direction","classList","add","setTimeout","remove","afterAnimate","setState","bind","restartGame","render","DOM","div","id","Tile","key","Menu","winClass","restart","clickHandler","e","props","target","className","onClick","h3","renderComponent","getElementById","Art"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,qBAAP;;;AAEC,aAAW;AAER,MAAIC,IAAI,GAAGF,KAAK,CAACG,WAAN,CAAkB;AAACC,IAAAA,WAAW,EAAE,MAAd;AAEzBC,IAAAA,OAAO,EAAE,UAASC,KAAT,EAAgB;AAErB;AACA,eAASC,WAAT,CAAqBD,KAArB,EAA4B;AACxB,YAAIE,CAAC,GAAG,CAAR,CADwB,CAGxB;;AACA,eAAO,CAACF,KAAK,CAACE,CAAD,CAAN,IAAa,CAACF,KAAK,CAACE,CAAC,GAAC,CAAH,CAA1B,EAAiCA,CAAC,GAJV,CAMxB;;;AACA,YAAIC,IAAI,GAAGH,KAAK,CAACE,CAAD,CAAhB,CAPwB,CAQxB;;AACAF,QAAAA,KAAK,CAACE,CAAD,CAAL,GAAWF,KAAK,CAACE,CAAC,GAAC,CAAH,CAAhB;AACAF,QAAAA,KAAK,CAACE,CAAC,GAAC,CAAH,CAAL,GAAaC,IAAb;AAEA,eAAOH,KAAP;AACH,OAhBoB,CAkBrB;;;AACA,eAASI,eAAT,CAAyBJ,KAAzB,EAAgC;AAC5B;AACA,YAAIK,QAAQ,GAAGL,KAAK,CAACM,GAAN,CAAU,UAASC,GAAT,EAAcL,CAAd,EAAiB;AACtC,cAAIM,UAAU,GAAG,CAAjB;;AACA,eAAKC,CAAC,GAAGP,CAAC,GAAG,CAAb,EAAgBO,CAAC,GAAGT,KAAK,CAACU,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,gBAAIT,KAAK,CAACS,CAAD,CAAL,IAAYT,KAAK,CAACS,CAAD,CAAL,GAAWF,GAA3B,EAAgC;AAC5BC,cAAAA,UAAU,IAAI,CAAd;AACH;AACJ;;AACD,iBAAOA,UAAP;AACH,SARc,CAAf,CAF4B,CAW5B;;AACA,eAAOH,QAAQ,CAACM,MAAT,CAAgB,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAClC,iBAAOD,CAAC,GAAGC,CAAX;AACH,SAFM,CAAP;AAGH,OAlCoB,CAoCrB;;;AACA,eAASC,YAAT,CAAsBd,KAAtB,EAA6B;AACzB,YAAIe,OAAO,GAAGf,KAAK,CAACU,MAApB;AAAA,YAA4BM,IAA5B;AAAA,YAAkCC,KAAlC,CADyB,CAGzB;;AACA,eAAOF,OAAO,GAAG,CAAjB,EAAoB;AAChB;AACAE,UAAAA,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,OAA3B,CAAR,CAFgB,CAGhB;;AACAA,UAAAA,OAAO,GAJS,CAKhB;;AACAC,UAAAA,IAAI,GAAGhB,KAAK,CAACe,OAAD,CAAZ;AACAf,UAAAA,KAAK,CAACe,OAAD,CAAL,GAAiBf,KAAK,CAACiB,KAAD,CAAtB;AACAjB,UAAAA,KAAK,CAACiB,KAAD,CAAL,GAAeD,IAAf;AACH;;AAED,eAAOhB,KAAP;AACH,OArDoB,CAuDrB;;;AACAA,MAAAA,KAAK,GAAGc,YAAY,CAACd,KAAD,CAApB,CAxDqB,CA0DrB;;AACA,UAAII,eAAe,CAACJ,KAAD,CAAf,GAAyB,CAAzB,KAA+B,CAAnC,EAAsC;AAClC;AACAA,QAAAA,KAAK,GAAGC,WAAW,CAACD,KAAD,CAAnB;AACH;;AAED,aAAOA,KAAP;AACH,KAnEwB;AAoEzBqB,IAAAA,eAAe,EAAE,YAAW;AACxB,aAAO;AACH;AACAC,QAAAA,KAAK,EAAE,KAAKvB,OAAL,CAAa,CAChB,CADgB,EACd,CADc,EACZ,CADY,EAEhB,CAFgB,EAEd,CAFc,EAEZ,CAFY,EAGhB,CAHgB,EAGd,CAHc,EAGZ,EAHY,CAAb,CAFJ;AAOHwB,QAAAA,GAAG,EAAE;AAPF,OAAP;AASH,KA9EwB;AA+EzBC,IAAAA,UAAU,EAAE,YAAW;AACnB,UAAIF,KAAK,GAAG,KAAKG,KAAL,CAAWH,KAAvB;;AAEA,WAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoB,KAAK,CAACZ,MAAN,GAAa,CAAjC,EAAoCR,CAAC,EAArC,EAAyC;AACrC,YAAIoB,KAAK,CAACpB,CAAD,CAAL,KAAaA,CAAC,GAAC,CAAnB,EAAsB,OAAO,KAAP;AACzB;;AAED,aAAO,IAAP;AACH,KAvFwB;AAwFzBwB,IAAAA,SAAS,EAAE,UAASC,MAAT,EAAiBC,QAAjB,EAA2BC,MAA3B,EAAmC;AAC1C,UAAIP,KAAK,GAAG,KAAKG,KAAL,CAAWH,KAAvB,CAD0C,CAE1C;AACA;AACA;;AACA,UAAIQ,KAAK,GAAG,CACR,CAAC,IAAD,EAAM,CAAN,EAAQ,CAAR,EAAU,IAAV,CADQ,EACQ,CAAC,IAAD,EAAM,CAAN,EAAQ,CAAR,EAAU,CAAV,CADR,EACqB,CAAC,IAAD,EAAM,IAAN,EAAW,CAAX,EAAa,CAAb,CADrB,EAER,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,IAAP,CAFQ,EAEQ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAFR,EAEqB,CAAC,CAAD,EAAG,IAAH,EAAQ,CAAR,EAAU,CAAV,CAFrB,EAGR,CAAC,CAAD,EAAG,CAAH,EAAK,IAAL,EAAU,IAAV,CAHQ,EAGQ,CAAC,CAAD,EAAG,CAAH,EAAK,IAAL,EAAU,CAAV,CAHR,EAGqB,CAAC,CAAD,EAAG,IAAH,EAAQ,IAAR,EAAa,CAAb,CAHrB,CAAZ;;AAMA,eAASC,YAAT,CAAsB7B,CAAtB,EAAyB8B,IAAzB,EAA+B;AAC3B,YAAIC,UAAU,GAAG,CAAC,IAAD,EAAM,OAAN,EAAc,MAAd,EAAqB,MAArB,CAAjB;AACA,YAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,sBAAsBJ,IAAI,GAAG,CAA7B,IAAkC,GAAzD,CAAf;AACAK,QAAAA,SAAS,GAAGJ,UAAU,CAAC/B,CAAD,CAAtB;AACAyB,QAAAA,MAAM,CAACW,SAAP,CAAiBC,GAAjB,CAAqB,UAAUF,SAA/B,EAJ2B,CAK3B;AACA;;AACAG,QAAAA,UAAU,CAAC,YAAW;AAClBN,UAAAA,QAAQ,CAACI,SAAT,CAAmBC,GAAnB,CAAuB,WAAvB;AACAZ,UAAAA,MAAM,CAACW,SAAP,CAAiBG,MAAjB,CAAwB,UAAUJ,SAAlC,EAFkB,CAGlB;;AACAG,UAAAA,UAAU,CAAC,YAAW;AAClBN,YAAAA,QAAQ,CAACI,SAAT,CAAmBG,MAAnB,CAA0B,WAA1B;AACH,WAFS,EAEP,GAFO,CAAV;AAGH,SAPS,EAOP,GAPO,CAAV;AAQH,OA1ByC,CA4B1C;AACA;;;AACA,eAASC,YAAT,GAAwB;AACpBpB,QAAAA,KAAK,CAACM,QAAD,CAAL,GAAkB,EAAlB;AACAN,QAAAA,KAAK,CAACU,IAAD,CAAL,GAAcH,MAAd;AACA,aAAKc,QAAL,CAAc;AACVrB,UAAAA,KAAK,EAAEA,KADG;AAEVQ,UAAAA,KAAK,EAAEA,KAFG;AAGVP,UAAAA,GAAG,EAAE,KAAKC,UAAL;AAHK,SAAd;AAKH;;AAAA,OAtCyC,CAwC1C;;AACA,UAAI,KAAKC,KAAL,CAAWF,GAAf,EAAoB,OAzCsB,CA2C1C;;AACA,WAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4B,KAAK,CAACF,QAAD,CAAL,CAAgBlB,MAApC,EAA4CR,CAAC,EAA7C,EAAiD;AAC7C,YAAI8B,IAAI,GAAGF,KAAK,CAACF,QAAD,CAAL,CAAgB1B,CAAhB,CAAX,CAD6C,CAE7C;;AACA,YAAI,OAAO8B,IAAP,KAAgB,QAAhB,IAA4B,CAACV,KAAK,CAACU,IAAD,CAAtC,EAA8C;AAC1CD,UAAAA,YAAY,CAAC7B,CAAD,EAAI8B,IAAJ,CAAZ;AACAQ,UAAAA,UAAU,CAACE,YAAY,CAACE,IAAb,CAAkB,IAAlB,CAAD,EAA0B,GAA1B,CAAV;AACA;AACH;AACJ;AACJ,KA7IwB;AA8IzBC,IAAAA,WAAW,EAAE,YAAW;AACpB,WAAKF,QAAL,CAAc,KAAKtB,eAAL,EAAd;AACH,KAhJwB;AAiJzByB,IAAAA,MAAM,EAAE,YAAW;AACf,aAAOpD,KAAK,CAACqD,GAAN,CAAUC,GAAV,CAAc,IAAd,EACHtD,KAAK,CAACqD,GAAN,CAAUC,GAAV,CAAc;AAACC,QAAAA,EAAE,EAAE;AAAL,OAAd,EACI,KAAKxB,KAAL,CAAWH,KAAX,CAAiBhB,GAAjB,CAAqB,UAASH,IAAT,EAAeyB,QAAf,EAAyB;AAC1C,eAASsB,IAAI,CAAC;AAACrB,UAAAA,MAAM,EAAE1B,IAAT;AAAegD,UAAAA,GAAG,EAAEvB,QAApB;AAA8BF,UAAAA,SAAS,EAAE,KAAKA;AAA9C,SAAD,CAAb;AACH,OAFD,EAEG,IAFH,CADJ,CADG,EAMH0B,IAAI,CAAC;AAACC,QAAAA,QAAQ,EAAE,KAAK5B,KAAL,CAAWF,GAAX,GAAiB,YAAjB,GAAgC,QAA3C;AAAqDM,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWF,GAAX,GAAiB,UAAjB,GAA8B,mBAA3F;AAAgH+B,QAAAA,OAAO,EAAE,KAAKT;AAA9H,OAAD,CAND,CAAP;AAQH;AA1JwB,GAAlB,CAAX;AA6JA,MAAIK,IAAI,GAAGxD,KAAK,CAACG,WAAN,CAAkB;AAACC,IAAAA,WAAW,EAAE,MAAd;AACzByD,IAAAA,YAAY,EAAE,UAASC,CAAT,EAAY;AACtB,WAAKC,KAAL,CAAW/B,SAAX,CAAqB8B,CAAC,CAACE,MAAvB,EAA+B,KAAKD,KAAL,CAAWN,GAA1C,EAA+C,KAAKM,KAAL,CAAW5B,MAA1D;AACH,KAHwB;AAIzBiB,IAAAA,MAAM,EAAE,YAAW;AACf,aAAOpD,KAAK,CAACqD,GAAN,CAAUC,GAAV,CAAc;AAACW,QAAAA,SAAS,EAAE,MAAZ;AAAoBC,QAAAA,OAAO,EAAE,KAAKL;AAAlC,OAAd,EAA+D,KAAKE,KAAL,CAAW5B,MAA1E,CAAP;AACH;AANwB,GAAlB,CAAX;AASA,MAAIuB,IAAI,GAAG1D,KAAK,CAACG,WAAN,CAAkB;AAACC,IAAAA,WAAW,EAAE,MAAd;AACzByD,IAAAA,YAAY,EAAE,YAAW;AACrB,WAAKE,KAAL,CAAWH,OAAX;AACH,KAHwB;AAIzBR,IAAAA,MAAM,EAAE,YAAW;AACf,aAAOpD,KAAK,CAACqD,GAAN,CAAUC,GAAV,CAAc;AAACC,QAAAA,EAAE,EAAE;AAAL,OAAd,EACHvD,KAAK,CAACqD,GAAN,CAAUc,EAAV,CAAa;AAACZ,QAAAA,EAAE,EAAE;AAAL,OAAb,EAA+B,KAAKQ,KAAL,CAAW5B,MAA1C,CADG,EAEHnC,KAAK,CAACqD,GAAN,CAAUnC,CAAV,CAAY;AAAC+C,QAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWJ,QAAvB;AAAiCO,QAAAA,OAAO,EAAE,KAAKL;AAA/C,OAAZ,EAA0E,SAA1E,CAFG,CAAP;AAIH;AATwB,GAAlB,CAAX,CAxKQ,CAoLR;;AACA7D,EAAAA,KAAK,CAACoE,eAAN,CACIlE,IAAI,CAAC,IAAD,CADR,EAEIuC,QAAQ,CAAC4B,cAAT,CAAwB,gBAAxB,CAFJ;AAKH,CA1LA,GAAD;;AA4LA,SAASC,GAAT,GAAe;AAGX,sBAEI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,4BACA;AAAI,MAAA,KAAK,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAUH;;KAbQA,G;AAeT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport \"../Styles/about.css\";\r\n\r\n(function() {\r\n\r\n    var Game = React.createClass({displayName: 'Game',\r\n\r\n        shuffle: function(array) {\r\n\r\n            // switches first two tiles\r\n            function switchTiles(array) {\r\n                var i = 0;\r\n\r\n                // find the first two tiles in a row\r\n                while (!array[i] || !array[i+1]) i++;\r\n\r\n                // store tile value\r\n                var tile = array[i];\r\n                // switche values\r\n                array[i] = array[i+1];\r\n                array[i+1] = tile;\r\n\r\n                return array;\r\n            }\r\n\r\n            // counts inversions\r\n            function countInversions(array) {\r\n                // make array of inversions\r\n                var invArray = array.map(function(num, i) {\r\n                    var inversions = 0;\r\n                    for (j = i + 1; j < array.length; j++) {\r\n                        if (array[j] && array[j] < num) {\r\n                            inversions += 1;\r\n                        }\r\n                    }\r\n                    return inversions;\r\n                });\r\n                // return sum of inversions array\r\n                return invArray.reduce(function(a, b) {\r\n                    return a + b;\r\n                });\r\n            }\r\n\r\n            // fischer-yates shuffle algorithm\r\n            function fischerYates(array) {\r\n                var counter = array.length, temp, index;\r\n\r\n                // While there are elements in the array\r\n                while (counter > 0) {\r\n                    // Pick a random index\r\n                    index = Math.floor(Math.random() * counter);\r\n                    // Decrease counter by 1\r\n                    counter--;\r\n                    // And swap the last element with it\r\n                    temp = array[counter];\r\n                    array[counter] = array[index];\r\n                    array[index] = temp;\r\n                }\r\n\r\n                return array;\r\n            }\r\n\r\n            // Fischer-Yates shuffle\r\n            array = fischerYates(array);\r\n\r\n            // check for even number of inversions\r\n            if (countInversions(array) % 2 !== 0) {\r\n                // switch two tiles if odd\r\n                array = switchTiles(array);\r\n            }\r\n\r\n            return array;\r\n        },\r\n        getInitialState: function() {\r\n            return {\r\n                // initial state of game board\r\n                tiles: this.shuffle([\r\n                    1,2,3,\r\n                    4,5,6,\r\n                    7,8,''\r\n                ]),\r\n                win: false\r\n            };\r\n        },\r\n        checkBoard: function() {\r\n            var tiles = this.state.tiles;\r\n\r\n            for (var i = 0; i < tiles.length-1; i++) {\r\n                if (tiles[i] !== i+1) return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n        tileClick: function(tileEl, position, status) {\r\n            var tiles = this.state.tiles;\r\n            // Possible moves\r\n            // [up,right,down,left]\r\n            // 9 = out of bounds\r\n            var moves = [\r\n                [null,1,3,null],[null,2,4,0],[null,null,5,1],\r\n                [0,4,6,null],   [1,5,7,3],   [2,null,8,4],\r\n                [3,7,null,null],[4,8,null,6],[5,null,null,7]\r\n            ];\r\n\r\n            function animateTiles(i, move) {\r\n                var directions = ['up','right','down','left'];\r\n                var moveToEl = document.querySelector('.tile:nth-child(' + (move + 1) + ')');\r\n                direction = directions[i];\r\n                tileEl.classList.add('move-' + direction);\r\n                // this is all a little hackish.\r\n                // css/js are used together to create the illusion of moving blocks\r\n                setTimeout(function() {\r\n                    moveToEl.classList.add('highlight');\r\n                    tileEl.classList.remove('move-' + direction);\r\n                    // time horribly linked with css transition\r\n                    setTimeout(function() {\r\n                        moveToEl.classList.remove('highlight');\r\n                    }, 400);\r\n                }, 200);\r\n            }\r\n\r\n            // called after tile is fully moved\r\n            // sets new state\r\n            function afterAnimate() {\r\n                tiles[position] = '';\r\n                tiles[move] = status;\r\n                this.setState({\r\n                    tiles: tiles,\r\n                    moves: moves,\r\n                    win: this.checkBoard()\r\n                });\r\n            };\r\n\r\n            // return if they've already won\r\n            if (this.state.win) return;\r\n\r\n            // check possible moves\r\n            for (var i = 0; i < moves[position].length; i++) {\r\n                var move = moves[position][i];\r\n                // if an adjacent tile is empty\r\n                if (typeof move === 'number' && !tiles[move]) {\r\n                    animateTiles(i, move);\r\n                    setTimeout(afterAnimate.bind(this), 200);\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n        restartGame: function() {\r\n            this.setState(this.getInitialState());\r\n        },\r\n        render: function() {\r\n            return React.DOM.div(null, \r\n                React.DOM.div({id: \"game-board\"}, \r\n                    this.state.tiles.map(function(tile, position) {\r\n                        return ( Tile({status: tile, key: position, tileClick: this.tileClick}) );\r\n                    }, this)\r\n                ), \r\n                Menu({winClass: this.state.win ? 'button win' : 'button', status: this.state.win ? 'You win!' : 'Solve the puzzle.', restart: this.restartGame})\r\n            );\r\n        }\r\n    });\r\n\r\n    var Tile = React.createClass({displayName: 'Tile',\r\n        clickHandler: function(e) {\r\n            this.props.tileClick(e.target, this.props.key, this.props.status);\r\n        },\r\n        render: function() {\r\n            return React.DOM.div({className: \"tile\", onClick: this.clickHandler}, this.props.status);\r\n        }\r\n    });\r\n\r\n    var Menu = React.createClass({displayName: 'Menu',\r\n        clickHandler: function() {\r\n            this.props.restart();\r\n        },\r\n        render: function() {\r\n            return React.DOM.div({id: \"menu\"}, \r\n                React.DOM.h3({id: \"subtitle\"}, this.props.status), \r\n                React.DOM.a({className: this.props.winClass, onClick: this.clickHandler}, \"Restart\")\r\n            );\r\n        }\r\n    });\r\n\r\n    // render Game to container\r\n    React.renderComponent(\r\n        Game(null),\r\n        document.getElementById('game-container')\r\n    );\r\n\r\n}());\r\n\r\nfunction Art() {\r\n\r\n   \r\n    return (\r\n\r\n        <div id=\"game-wrapper\">\r\n        <h1 class=\"title\">ReactJS Slide Puzzle</h1>\r\n        <div id=\"game-container\"></div>\r\n  \r\n     \r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Art;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}