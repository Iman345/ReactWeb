{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\ReactWeb\\\\app_1\\\\src\\\\pages\\\\art.js\";\nimport React from \"react\";\nimport \"../pages/slidingpuzzle\";\nimport { Link } from 'react-router-dom';\nimport \"../Styles/about.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst {\n  Component\n} = React;\nconst {\n  render\n} = ReactDOM;\nconst {\n  Motion,\n  spring\n} = ReactMotion;\nconst {\n  range\n} = _;\nconst tilesStyle = {\n  listStyle: 'none',\n  margin: '0 auto',\n  padding: 5,\n  position: 'relative'\n};\nconst tileStyle = {\n  backgroundColor: 'grey',\n  boxShadow: 'inset 0 0 1px 0 black',\n  boxSizing: 'border-box',\n  display: 'block',\n  padding: 6,\n  position: 'absolute'\n};\nconst holeStyle = {\n  opacity: 0\n};\nconst buttonStyle = {\n  display: 'block',\n  margin: '16px auto',\n  padding: '8px 16px'\n}; // Checks if the puzzle can be solved.\n//\n// Examples:\n//   isSolvable([3, 7, 6, 0, 5, 1, 2, 4, 8], 3, 3) // => false\n//   isSolvable([6, 4, 5, 0, 1, 2, 3, 7, 8], 3, 3) // => true\n\nfunction isSolvable(numbers, rows, cols) {\n  let product = 1;\n\n  for (let i = 1, l = rows * cols - 1; i <= l; i++) {\n    for (let j = i + 1, m = l + 1; j <= m; j++) {\n      product *= (numbers[i - 1] - numbers[j - 1]) / (i - j);\n    }\n  }\n\n  return Math.round(product) === 1;\n} // Checks if the puzzle is solved.\n//\n// Examples:\n//   isSolved([6, 4, 5, 0, 1, 2, 3, 7, 8]) // => false\n//   isSolved([0, 1, 2, 3, 4, 5, 6, 7, 8]) // => true\n\n\nfunction isSolved(numbers) {\n  for (let i = 0, l = numbers.length; i < l; i++) {\n    if (numbers[i] !== i) {\n      return false;\n    }\n  }\n\n  return true;\n} // Get the linear index from a row/col pair.\n\n\nfunction getLinearPosition({\n  row,\n  col\n}, rows, cols) {\n  return parseInt(row, 10) * cols + parseInt(col, 10);\n} // Get the row/col pair from a linear index.\n\n\nfunction getMatrixPosition(index, rows, cols) {\n  return {\n    row: Math.floor(index / cols),\n    col: index % cols\n  };\n}\n\nfunction getVisualPosition({\n  row,\n  col\n}, width, height) {\n  return {\n    x: col * width,\n    y: row * height\n  };\n}\n\nfunction shuffle(numbers, hole, rows, cols) {\n  do {\n    numbers = _.shuffle(_.without(numbers, hole)).concat(hole);\n  } while (isSolved(numbers) || !isSolvable(numbers, rows, cols));\n\n  return numbers;\n}\n\nfunction canSwap(src, dest, rows, cols) {\n  const {\n    row: srcRow,\n    col: srcCol\n  } = getMatrixPosition(src, rows, cols);\n  const {\n    row: destRow,\n    col: destCol\n  } = getMatrixPosition(dest, rows, cols);\n  return Math.abs(srcRow - destRow) + Math.abs(srcCol - destCol) === 1;\n}\n\nfunction swap(numbers, src, dest) {\n  numbers = _.clone(numbers);\n  [numbers[src], numbers[dest]] = [numbers[dest], numbers[src]];\n  return numbers;\n}\n\nclass Tile extends Component {\n  constructor() {\n    super();\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const {\n      index\n    } = this.props;\n    this.props.onClick(index);\n  }\n\n  render() {\n    const {\n      hole,\n      number,\n      index,\n      rows,\n      cols,\n      width,\n      height\n    } = this.props;\n    const matrixPos = getMatrixPosition(index, rows, cols);\n    const visualPos = getVisualPosition(matrixPos, width, height);\n    const motionStyle = {\n      translateX: spring(visualPos.x),\n      translateY: spring(visualPos.y)\n    };\n    const style = { ...tileStyle,\n      ...(number === hole ? holeStyle : {}),\n      width,\n      height\n    };\n    return /*#__PURE__*/_jsxDEV(Motion, {\n      style: motionStyle,\n      children: ({\n        translateX,\n        translateY\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: { ...style,\n          transform: `translate3d(${translateX}px, ${translateY}px, 0)`\n        },\n        onClick: this.handleClick,\n        children: number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Tiles extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      rows,\n      cols\n    } = props;\n    this.state = {\n      numbers: _.range(0, rows * cols)\n    };\n    this.handleTileClick = this.handleTileClick.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  handleTileClick(index) {\n    this.swap(index);\n  }\n\n  handleButtonClick() {\n    this.shuffle();\n  }\n\n  shuffle() {\n    const {\n      hole,\n      rows,\n      cols\n    } = this.props;\n    const {\n      numbers\n    } = this.state;\n    const shuffledNumbers = shuffle(numbers, hole, rows, cols);\n    this.setState({\n      numbers: shuffledNumbers\n    });\n  }\n\n  swap(tileIndex) {\n    const {\n      hole,\n      rows,\n      cols\n    } = this.props;\n    const {\n      numbers\n    } = this.state;\n    const holeIndex = numbers.indexOf(hole);\n\n    if (canSwap(tileIndex, holeIndex, rows, cols)) {\n      const newNumbers = swap(numbers, tileIndex, holeIndex);\n      this.setState({\n        numbers: newNumbers\n      });\n    }\n  }\n\n  render() {\n    const {\n      rows,\n      cols,\n      width,\n      height\n    } = this.props;\n    const {\n      numbers\n    } = this.state;\n    const solved = isSolved(numbers);\n    const pieceWidth = Math.round(width / cols);\n    const pieceHeight = Math.round(height / rows);\n    const style = { ...tilesStyle,\n      width,\n      height\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        style: style,\n        children: numbers.map((number, index) => /*#__PURE__*/_createElement(Tile, { ...this.props,\n          index: index,\n          number: number,\n          key: number,\n          width: pieceWidth,\n          height: pieceHeight,\n          onClick: this.handleTileClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: this.handleButtonClick,\n        children: solved ? 'Start' : 'Restart'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Puzzle extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Tiles, {\n      rows: 3,\n      cols: 3,\n      hole: 8,\n      width: 300,\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nrender( /*#__PURE__*/_jsxDEV(Puzzle, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 226,\n  columnNumber: 8\n}, this), document.querySelector('#container'));\n\nfunction Art() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"about comp-space\",\n    id: \"container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Art;\nexport default Art;\n\nvar _c;\n\n$RefreshReg$(_c, \"Art\");","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/ReactWeb/app_1/src/pages/art.js"],"names":["React","Link","Component","render","ReactDOM","Motion","spring","ReactMotion","range","_","tilesStyle","listStyle","margin","padding","position","tileStyle","backgroundColor","boxShadow","boxSizing","display","holeStyle","opacity","buttonStyle","isSolvable","numbers","rows","cols","product","i","l","j","m","Math","round","isSolved","length","getLinearPosition","row","col","parseInt","getMatrixPosition","index","floor","getVisualPosition","width","height","x","y","shuffle","hole","without","concat","canSwap","src","dest","srcRow","srcCol","destRow","destCol","abs","swap","clone","Tile","constructor","handleClick","bind","props","onClick","number","matrixPos","visualPos","motionStyle","translateX","translateY","style","transform","Tiles","state","handleTileClick","handleButtonClick","shuffledNumbers","setState","tileIndex","holeIndex","indexOf","newNumbers","solved","pieceWidth","pieceHeight","map","Puzzle","document","querySelector","Art"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../pages/slidingpuzzle\";\r\nimport {Link} from 'react-router-dom';\r\nimport \"../Styles/about.css\";\r\n\r\n\r\n\r\nconst {Component} = React\r\nconst {render} = ReactDOM\r\nconst {Motion, spring} = ReactMotion\r\nconst {range} = _\r\n\r\nconst tilesStyle = {\r\n  listStyle: 'none',\r\n  margin: '0 auto',\r\n  padding: 5,\r\n  position: 'relative'\r\n}\r\n\r\nconst tileStyle = {\r\n  backgroundColor: 'grey',\r\n  boxShadow: 'inset 0 0 1px 0 black',\r\n  boxSizing: 'border-box',\r\n  display: 'block',\r\n  padding: 6,\r\n  position: 'absolute'\r\n}\r\n\r\nconst holeStyle = {\r\n  opacity: 0\r\n}\r\n\r\nconst buttonStyle = {\r\n  display: 'block',\r\n  margin: '16px auto',\r\n  padding: '8px 16px'\r\n}\r\n\r\n// Checks if the puzzle can be solved.\r\n//\r\n// Examples:\r\n//   isSolvable([3, 7, 6, 0, 5, 1, 2, 4, 8], 3, 3) // => false\r\n//   isSolvable([6, 4, 5, 0, 1, 2, 3, 7, 8], 3, 3) // => true\r\nfunction isSolvable (numbers, rows, cols) {\r\n  let product = 1\r\n  for (let i = 1, l = rows * cols - 1; i <= l; i++) {\r\n    for (let j = i + 1, m = l + 1; j <= m; j++) {\r\n      product *= (numbers[i - 1] - numbers[j - 1]) / (i - j)\r\n    }\r\n  }\r\n  return Math.round(product) === 1\r\n}\r\n\r\n// Checks if the puzzle is solved.\r\n//\r\n// Examples:\r\n//   isSolved([6, 4, 5, 0, 1, 2, 3, 7, 8]) // => false\r\n//   isSolved([0, 1, 2, 3, 4, 5, 6, 7, 8]) // => true\r\nfunction isSolved (numbers) {\r\n  for (let i = 0, l = numbers.length; i < l; i++) {\r\n    if (numbers[i] !== i) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n// Get the linear index from a row/col pair.\r\nfunction getLinearPosition ({row, col}, rows, cols) {\r\n  return parseInt(row, 10) * cols + parseInt(col, 10)\r\n}\r\n\r\n// Get the row/col pair from a linear index.\r\nfunction getMatrixPosition (index, rows, cols) {\r\n  return {\r\n    row: Math.floor(index / cols),\r\n    col: index % cols\r\n  }\r\n}\r\n\r\nfunction getVisualPosition ({row, col}, width, height) {\r\n  return {\r\n    x: col * width,\r\n    y: row * height\r\n  }\r\n}\r\n\r\nfunction shuffle (numbers, hole, rows, cols) {\r\n  do {\r\n    numbers = _.shuffle(_.without(numbers, hole)).concat(hole)\r\n  } while (isSolved(numbers) || !isSolvable(numbers, rows, cols))\r\n  return numbers\r\n}\r\n\r\nfunction canSwap (src, dest, rows, cols) {\r\n  const {row: srcRow, col: srcCol} = getMatrixPosition(src, rows, cols)\r\n  const {row: destRow, col: destCol} = getMatrixPosition(dest, rows, cols)\r\n  return (Math.abs(srcRow - destRow) + Math.abs(srcCol - destCol) === 1)\r\n}\r\n\r\nfunction swap (numbers, src, dest) {\r\n  numbers = _.clone(numbers);\r\n  [numbers[src], numbers[dest]] = [numbers[dest], numbers[src]]\r\n  return numbers\r\n}\r\n\r\nclass Tile extends Component {\r\n  constructor () {\r\n    super()\r\n    \r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n  \r\n  handleClick () {\r\n    const {index} = this.props\r\n    this.props.onClick(index)\r\n  }\r\n  \r\n  render () {\r\n    const {hole, number, index, rows, cols, width, height} = this.props\r\n    const matrixPos = getMatrixPosition(index, rows, cols)\r\n    const visualPos = getVisualPosition(matrixPos, width, height)\r\n    const motionStyle = {\r\n      translateX: spring(visualPos.x),\r\n      translateY: spring(visualPos.y)\r\n    }\r\n    const style = {\r\n      ...tileStyle,\r\n      ...(number === hole ? holeStyle : {}),\r\n      width,\r\n      height\r\n    }\r\n    \r\n    return (\r\n      <Motion style={motionStyle}>\r\n        {({translateX, translateY}) => (\r\n          <li style={{...style, transform: `translate3d(${translateX}px, ${translateY}px, 0)`}}\r\n            onClick={this.handleClick}\r\n            >\r\n            {number}\r\n          </li>\r\n        )}\r\n      </Motion>\r\n    )\r\n  }\r\n}\r\n\r\nclass Tiles extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    \r\n    const {rows, cols} = props\r\n    this.state = {numbers: _.range(0, rows * cols)}\r\n    \r\n    this.handleTileClick = this.handleTileClick.bind(this)\r\n    this.handleButtonClick = this.handleButtonClick.bind(this)\r\n  }\r\n  \r\n  handleTileClick (index) {\r\n    this.swap(index)\r\n  }\r\n  \r\n  handleButtonClick () {\r\n    this.shuffle()\r\n  }\r\n  \r\n  shuffle () {\r\n    const {hole, rows, cols} = this.props\r\n    const {numbers} = this.state\r\n    const shuffledNumbers = shuffle(numbers, hole, rows, cols)\r\n    this.setState({numbers: shuffledNumbers})\r\n  }\r\n  \r\n  swap (tileIndex) {\r\n    const {hole, rows, cols} = this.props\r\n    const {numbers} = this.state\r\n    const holeIndex = numbers.indexOf(hole)\r\n    if (canSwap(tileIndex, holeIndex, rows, cols)) {\r\n      const newNumbers = swap(numbers, tileIndex, holeIndex)\r\n      this.setState({numbers: newNumbers})\r\n    }\r\n  }\r\n  \r\n  render () {\r\n    const {rows, cols, width, height} = this.props\r\n    const {numbers} = this.state\r\n    const solved = isSolved(numbers)\r\n    const pieceWidth = Math.round(width / cols)\r\n    const pieceHeight = Math.round(height / rows)\r\n    const style = {\r\n      ...tilesStyle,\r\n      width,\r\n      height\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <ul style={style}>\r\n          {numbers.map((number, index) => (\r\n            <Tile {...this.props} index={index} number={number} key={number}\r\n              width={pieceWidth} height={pieceHeight}\r\n              onClick={this.handleTileClick}\r\n            />\r\n          ))}\r\n        </ul>\r\n        <button style={buttonStyle}\r\n          onClick={this.handleButtonClick}\r\n        >\r\n          {solved ? 'Start' : 'Restart'}\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Puzzle extends Component {\r\n  render () {\r\n    return (\r\n      <Tiles rows={3} cols={3} hole={8}\r\n        width={300} height={300}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nrender(<Puzzle />, document.querySelector('#container'))\r\n\r\nfunction Art() {\r\n\r\n   \r\n    return (\r\n\r\n    <div className=\"about comp-space\" id=\"container\">\r\n     \r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Art;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}