{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\ReactWeb\\\\app_1\\\\src\\\\pages\\\\memory.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { Dialog, DialogActions, DialogContent, DialogContentText, Button, DialogTitle } from \"@material-ui/core\";\nimport Card from \"../pages/card\";\nimport \"../Styles/memory.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst uniqueCardsArray = [{\n  type: \"Pikachu\",\n  image: require(`../img/pika.png`)\n}, {\n  type: \"ButterFree\",\n  image: require(`../img/me.png`)\n}, {\n  type: \"Charmander\",\n  image: require(`../img/me.png`)\n}, {\n  type: \"Squirtle\",\n  image: require(`../img/pokeball.jpg`)\n}, {\n  type: \"Pidgetto\",\n  image: require(`../img/me.png`)\n}, {\n  type: \"Bulbasaur\",\n  image: require(`../img/bulb.png`)\n}];\n\nfunction shuffleCards(array) {\n  const length = array.length;\n\n  for (let i = length; i > 0; i--) {\n    const randomIndex = Math.floor(Math.random() * i);\n    const currentIndex = i - 1;\n    const temp = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temp;\n  }\n\n  return array;\n}\n\nexport default function Memory() {\n  _s();\n\n  const [cards, setCards] = useState(() => shuffleCards(uniqueCardsArray.concat(uniqueCardsArray)));\n  const [openCards, setOpenCards] = useState([]);\n  const [clearedCards, setClearedCards] = useState({});\n  const [shouldDisableAllCards, setShouldDisableAllCards] = useState(false);\n  const [moves, setMoves] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const [bestScore, setBestScore] = useState(JSON.parse(localStorage.getItem(\"bestScore\")) || Number.POSITIVE_INFINITY);\n  const timeout = useRef(null);\n\n  const disable = () => {\n    setShouldDisableAllCards(true);\n  };\n\n  const enable = () => {\n    setShouldDisableAllCards(false);\n  };\n\n  const checkCompletion = () => {\n    if (Object.keys(clearedCards).length === uniqueCardsArray.length) {\n      setShowModal(true);\n      const highScore = Math.min(moves, bestScore);\n      setBestScore(highScore);\n      localStorage.setItem(\"bestScore\", highScore);\n    }\n  };\n\n  const evaluate = () => {\n    const [first, second] = openCards;\n    enable();\n\n    if (cards[first].type === cards[second].type) {\n      setClearedCards(prev => ({ ...prev,\n        [cards[first].type]: true\n      }));\n      setOpenCards([]);\n      return;\n    } // This is to flip the cards back after 500ms duration\n\n\n    timeout.current = setTimeout(() => {\n      setOpenCards([]);\n    }, 500);\n  };\n\n  const handleCardClick = index => {\n    if (openCards.length === 1) {\n      setOpenCards(prev => [...prev, index]);\n      setMoves(moves => moves + 1);\n      disable();\n    } else {\n      clearTimeout(timeout.current);\n      setOpenCards([index]);\n    }\n  };\n\n  useEffect(() => {\n    let timeout = null;\n\n    if (openCards.length === 2) {\n      timeout = setTimeout(evaluate, 300);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [openCards]);\n  useEffect(() => {\n    checkCompletion();\n  }, [clearedCards]);\n\n  const checkIsFlipped = index => {\n    return openCards.includes(index);\n  };\n\n  const checkIsInactive = card => {\n    return Boolean(clearedCards[card.type]);\n  };\n\n  const handleRestart = () => {\n    setClearedCards({});\n    setOpenCards([]);\n    setShowModal(false);\n    setMoves(0);\n    setShouldDisableAllCards(false); // set a shuffled deck of cards\n\n    setCards(shuffleCards(uniqueCardsArray.concat(uniqueCardsArray)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Memory\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Play the Flip card game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Select two cards with same content consequtively to make them vanish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: cards.map((card, index) => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          index: index,\n          isDisabled: shouldDisableAllCards,\n          isInactive: checkIsInactive(card),\n          isFlipped: checkIsFlipped(index),\n          onClick: handleCardClick\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moves\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bold\",\n            children: \"Moves:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), \" \", moves]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), localStorage.getItem(\"bestScore\") && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"high-score\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bold\",\n            children: \"Best Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), \" \", bestScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restart\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRestart,\n          color: \"primary\",\n          variant: \"contained\",\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showModal,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"Hurray!!! You completed the challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: [\"You completed the game in \", moves, \" moves. Your best score is\", \" \", bestScore, \" moves.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleRestart,\n          color: \"primary\",\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Memory, \"nMnrfhwspt1OjNWgXrPypYyn69M=\");\n\n_c = Memory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Memory\");","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/ReactWeb/app_1/src/pages/memory.js"],"names":["useEffect","useState","useRef","Dialog","DialogActions","DialogContent","DialogContentText","Button","DialogTitle","Card","uniqueCardsArray","type","image","require","shuffleCards","array","length","i","randomIndex","Math","floor","random","currentIndex","temp","Memory","cards","setCards","concat","openCards","setOpenCards","clearedCards","setClearedCards","shouldDisableAllCards","setShouldDisableAllCards","moves","setMoves","showModal","setShowModal","bestScore","setBestScore","JSON","parse","localStorage","getItem","Number","POSITIVE_INFINITY","timeout","disable","enable","checkCompletion","Object","keys","highScore","min","setItem","evaluate","first","second","prev","current","setTimeout","handleCardClick","index","clearTimeout","checkIsFlipped","includes","checkIsInactive","card","Boolean","handleRestart","map"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SACEC,MADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,iBAJF,EAKEC,MALF,EAMEC,WANF,QAOO,mBAPP;AAQA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAO,uBAAP;;AAEA,MAAMC,gBAAgB,GAAG,CACvB;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,KAAK,EAAEC,OAAO,CAAE,iBAAF;AAFhB,CADuB,EAKvB;AACEF,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,KAAK,EAAEC,OAAO,CAAE,eAAF;AAFhB,CALuB,EASvB;AACEF,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,KAAK,EAAEC,OAAO,CAAE,eAAF;AAFhB,CATuB,EAavB;AACEF,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,KAAK,EAAEC,OAAO,CAAE,qBAAF;AAFhB,CAbuB,EAiBvB;AACEF,EAAAA,IAAI,EAAE,UADR;AAEEC,EAAAA,KAAK,EAAEC,OAAO,CAAE,eAAF;AAFhB,CAjBuB,EAqBvB;AACEF,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,KAAK,EAAEC,OAAO,CAAE,iBAAF;AAFhB,CArBuB,CAAzB;;AA2BA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;;AACA,OAAK,IAAIC,CAAC,GAAGD,MAAb,EAAqBC,CAAC,GAAG,CAAzB,EAA4BA,CAAC,EAA7B,EAAiC;AAC/B,UAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,CAA3B,CAApB;AACA,UAAMK,YAAY,GAAGL,CAAC,GAAG,CAAzB;AACA,UAAMM,IAAI,GAAGR,KAAK,CAACO,YAAD,CAAlB;AACAP,IAAAA,KAAK,CAACO,YAAD,CAAL,GAAsBP,KAAK,CAACG,WAAD,CAA3B;AACAH,IAAAA,KAAK,CAACG,WAAD,CAAL,GAAqBK,IAArB;AACD;;AACD,SAAOR,KAAP;AACD;;AACD,eAAe,SAASS,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,MACjCa,YAAY,CAACJ,gBAAgB,CAACiB,MAAjB,CAAwBjB,gBAAxB,CAAD,CADoB,CAAlC;AAGA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4B5B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC6B,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC+B,qBAAD,EAAwBC,wBAAxB,IAAoDhC,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAACiC,KAAD,EAAQC,QAAR,IAAoBlC,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACmC,SAAD,EAAYC,YAAZ,IAA4BpC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACqC,SAAD,EAAYC,YAAZ,IAA4BtC,QAAQ,CACxCuC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,KAAiDC,MAAM,CAACC,iBADhB,CAA1C;AAGA,QAAMC,OAAO,GAAG5C,MAAM,CAAC,IAAD,CAAtB;;AAEA,QAAM6C,OAAO,GAAG,MAAM;AACpBd,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,GAFD;;AAGA,QAAMe,MAAM,GAAG,MAAM;AACnBf,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACD,GAFD;;AAIA,QAAMgB,eAAe,GAAG,MAAM;AAC5B,QAAIC,MAAM,CAACC,IAAP,CAAYrB,YAAZ,EAA0Bd,MAA1B,KAAqCN,gBAAgB,CAACM,MAA1D,EAAkE;AAChEqB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMe,SAAS,GAAGjC,IAAI,CAACkC,GAAL,CAASnB,KAAT,EAAgBI,SAAhB,CAAlB;AACAC,MAAAA,YAAY,CAACa,SAAD,CAAZ;AACAV,MAAAA,YAAY,CAACY,OAAb,CAAqB,WAArB,EAAkCF,SAAlC;AACD;AACF,GAPD;;AASA,QAAMG,QAAQ,GAAG,MAAM;AACrB,UAAM,CAACC,KAAD,EAAQC,MAAR,IAAkB7B,SAAxB;AACAoB,IAAAA,MAAM;;AACN,QAAIvB,KAAK,CAAC+B,KAAD,CAAL,CAAa7C,IAAb,KAAsBc,KAAK,CAACgC,MAAD,CAAL,CAAc9C,IAAxC,EAA8C;AAC5CoB,MAAAA,eAAe,CAAE2B,IAAD,KAAW,EAAE,GAAGA,IAAL;AAAW,SAACjC,KAAK,CAAC+B,KAAD,CAAL,CAAa7C,IAAd,GAAqB;AAAhC,OAAX,CAAD,CAAf;AACAkB,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA;AACD,KAPoB,CAQrB;;;AACAiB,IAAAA,OAAO,CAACa,OAAR,GAAkBC,UAAU,CAAC,MAAM;AACjC/B,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,KAF2B,EAEzB,GAFyB,CAA5B;AAGD,GAZD;;AAaA,QAAMgC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAIlC,SAAS,CAACZ,MAAV,KAAqB,CAAzB,EAA4B;AAC1Ba,MAAAA,YAAY,CAAE6B,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUI,KAAV,CAAX,CAAZ;AACA3B,MAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACAa,MAAAA,OAAO;AACR,KAJD,MAIO;AACLgB,MAAAA,YAAY,CAACjB,OAAO,CAACa,OAAT,CAAZ;AACA9B,MAAAA,YAAY,CAAC,CAACiC,KAAD,CAAD,CAAZ;AACD;AACF,GATD;;AAWA9D,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI8C,OAAO,GAAG,IAAd;;AACA,QAAIlB,SAAS,CAACZ,MAAV,KAAqB,CAAzB,EAA4B;AAC1B8B,MAAAA,OAAO,GAAGc,UAAU,CAACL,QAAD,EAAW,GAAX,CAApB;AACD;;AACD,WAAO,MAAM;AACXQ,MAAAA,YAAY,CAACjB,OAAD,CAAZ;AACD,KAFD;AAGD,GARQ,EAQN,CAAClB,SAAD,CARM,CAAT;AAUA5B,EAAAA,SAAS,CAAC,MAAM;AACdiD,IAAAA,eAAe;AAChB,GAFQ,EAEN,CAACnB,YAAD,CAFM,CAAT;;AAGA,QAAMkC,cAAc,GAAIF,KAAD,IAAW;AAChC,WAAOlC,SAAS,CAACqC,QAAV,CAAmBH,KAAnB,CAAP;AACD,GAFD;;AAIA,QAAMI,eAAe,GAAIC,IAAD,IAAU;AAChC,WAAOC,OAAO,CAACtC,YAAY,CAACqC,IAAI,CAACxD,IAAN,CAAb,CAAd;AACD,GAFD;;AAIA,QAAM0D,aAAa,GAAG,MAAM;AAC1BtC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAQ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAF,IAAAA,wBAAwB,CAAC,KAAD,CAAxB,CAL0B,CAM1B;;AACAP,IAAAA,QAAQ,CAACZ,YAAY,CAACJ,gBAAgB,CAACiB,MAAjB,CAAwBjB,gBAAxB,CAAD,CAAb,CAAR;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGe,KAAK,CAAC6C,GAAN,CAAU,CAACH,IAAD,EAAOL,KAAP,KAAiB;AAC1B,4BACE,QAAC,IAAD;AAEE,UAAA,IAAI,EAAEK,IAFR;AAGE,UAAA,KAAK,EAAEL,KAHT;AAIE,UAAA,UAAU,EAAE9B,qBAJd;AAKE,UAAA,UAAU,EAAEkC,eAAe,CAACC,IAAD,CAL7B;AAME,UAAA,SAAS,EAAEH,cAAc,CAACF,KAAD,CAN3B;AAOE,UAAA,OAAO,EAAED;AAPX,WACOC,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAZA;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,eAsBE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OACwC5B,KADxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGQ,YAAY,CAACC,OAAb,CAAqB,WAArB,kBACC;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,OAC6CL,SAD7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE+B,aAAjB;AAAgC,UAAA,KAAK,EAAC,SAAtC;AAAgD,UAAA,OAAO,EAAC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,eAuCE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEjC,SADR;AAEE,MAAA,oBAAoB,MAFtB;AAGE,MAAA,oBAAoB,MAHtB;AAIE,yBAAgB,oBAJlB;AAKE,0BAAiB,0BALnB;AAAA,8BAOE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,aAAD;AAAA,+BACE,QAAC,iBAAD;AAAmB,UAAA,EAAE,EAAC,0BAAtB;AAAA,mDAC6BF,KAD7B,gCAC8D,GAD9D,EAEGI,SAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,eAgBE,QAAC,aAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE+B,aAAjB;AAAgC,UAAA,KAAK,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgED;;GArJuB7C,M;;KAAAA,M","sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Button,\r\n  DialogTitle\r\n} from \"@material-ui/core\";\r\nimport Card from \"../pages/card\";\r\nimport \"../Styles/memory.scss\";\r\n\r\nconst uniqueCardsArray = [\r\n  {\r\n    type: \"Pikachu\",\r\n    image: require(`../img/pika.png`)\r\n  },\r\n  {\r\n    type: \"ButterFree\",\r\n    image: require(`../img/me.png`)\r\n  },\r\n  {\r\n    type: \"Charmander\",\r\n    image: require(`../img/me.png`)\r\n  },\r\n  {\r\n    type: \"Squirtle\",\r\n    image: require(`../img/pokeball.jpg`)\r\n  },\r\n  {\r\n    type: \"Pidgetto\",\r\n    image: require(`../img/me.png`)\r\n  },\r\n  {\r\n    type: \"Bulbasaur\",\r\n    image: require(`../img/bulb.png`)\r\n  }\r\n];\r\n\r\nfunction shuffleCards(array) {\r\n  const length = array.length;\r\n  for (let i = length; i > 0; i--) {\r\n    const randomIndex = Math.floor(Math.random() * i);\r\n    const currentIndex = i - 1;\r\n    const temp = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temp;\r\n  }\r\n  return array;\r\n}\r\nexport default function Memory() {\r\n  const [cards, setCards] = useState(() =>\r\n    shuffleCards(uniqueCardsArray.concat(uniqueCardsArray))\r\n  );\r\n  const [openCards, setOpenCards] = useState([]);\r\n  const [clearedCards, setClearedCards] = useState({});\r\n  const [shouldDisableAllCards, setShouldDisableAllCards] = useState(false);\r\n  const [moves, setMoves] = useState(0);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [bestScore, setBestScore] = useState(\r\n    JSON.parse(localStorage.getItem(\"bestScore\")) || Number.POSITIVE_INFINITY\r\n  );\r\n  const timeout = useRef(null);\r\n\r\n  const disable = () => {\r\n    setShouldDisableAllCards(true);\r\n  };\r\n  const enable = () => {\r\n    setShouldDisableAllCards(false);\r\n  };\r\n\r\n  const checkCompletion = () => {\r\n    if (Object.keys(clearedCards).length === uniqueCardsArray.length) {\r\n      setShowModal(true);\r\n      const highScore = Math.min(moves, bestScore);\r\n      setBestScore(highScore);\r\n      localStorage.setItem(\"bestScore\", highScore);\r\n    }\r\n  };\r\n\r\n  const evaluate = () => {\r\n    const [first, second] = openCards;\r\n    enable();\r\n    if (cards[first].type === cards[second].type) {\r\n      setClearedCards((prev) => ({ ...prev, [cards[first].type]: true }));\r\n      setOpenCards([]);\r\n      return;\r\n    }\r\n    // This is to flip the cards back after 500ms duration\r\n    timeout.current = setTimeout(() => {\r\n      setOpenCards([]);\r\n    }, 500);\r\n  };\r\n  const handleCardClick = (index) => {\r\n    if (openCards.length === 1) {\r\n      setOpenCards((prev) => [...prev, index]);\r\n      setMoves((moves) => moves + 1);\r\n      disable();\r\n    } else {\r\n      clearTimeout(timeout.current);\r\n      setOpenCards([index]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timeout = null;\r\n    if (openCards.length === 2) {\r\n      timeout = setTimeout(evaluate, 300);\r\n    }\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, [openCards]);\r\n\r\n  useEffect(() => {\r\n    checkCompletion();\r\n  }, [clearedCards]);\r\n  const checkIsFlipped = (index) => {\r\n    return openCards.includes(index);\r\n  };\r\n\r\n  const checkIsInactive = (card) => {\r\n    return Boolean(clearedCards[card.type]);\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setClearedCards({});\r\n    setOpenCards([]);\r\n    setShowModal(false);\r\n    setMoves(0);\r\n    setShouldDisableAllCards(false);\r\n    // set a shuffled deck of cards\r\n    setCards(shuffleCards(uniqueCardsArray.concat(uniqueCardsArray)));\r\n  };\r\n\r\n  return (\r\n    <div className=\"Memory\">\r\n      <header>\r\n        <h3>Play the Flip card game</h3>\r\n        <div>\r\n          Select two cards with same content consequtively to make them vanish\r\n        </div>\r\n      </header>\r\n      <div className=\"container\">\r\n        {cards.map((card, index) => {\r\n          return (\r\n            <Card\r\n              key={index}\r\n              card={card}\r\n              index={index}\r\n              isDisabled={shouldDisableAllCards}\r\n              isInactive={checkIsInactive(card)}\r\n              isFlipped={checkIsFlipped(index)}\r\n              onClick={handleCardClick}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <footer>\r\n        <div className=\"score\">\r\n          <div className=\"moves\">\r\n            <span className=\"bold\">Moves:</span> {moves}\r\n          </div>\r\n          {localStorage.getItem(\"bestScore\") && (\r\n            <div className=\"high-score\">\r\n              <span className=\"bold\">Best Score:</span> {bestScore}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"restart\">\r\n          <Button onClick={handleRestart} color=\"primary\" variant=\"contained\">\r\n            Restart\r\n          </Button>\r\n        </div>\r\n      </footer>\r\n      <Dialog\r\n        open={showModal}\r\n        disableBackdropClick\r\n        disableEscapeKeyDown\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Hurray!!! You completed the challenge\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            You completed the game in {moves} moves. Your best score is{\" \"}\r\n            {bestScore} moves.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleRestart} color=\"primary\">\r\n            Restart\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}