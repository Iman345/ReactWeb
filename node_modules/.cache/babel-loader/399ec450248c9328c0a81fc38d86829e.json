{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\GitHub\\\\ReactWeb\\\\app_1\\\\src\\\\pages\\\\art.js\";\nimport React from 'react';\nimport { ChromePicker } from 'react-color';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass art extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      displayColorPicker: false\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        displayColorPicker: !this.state.displayColorPicker\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        displayColorPicker: false\n      });\n    };\n  }\n\n  render() {\n    const popover = {\n      position: 'absolute',\n      zIndex: '2'\n    };\n    const cover = {\n      position: 'fixed',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"Pick Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), this.state.displayColorPicker ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: popover,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: cover,\n          onClick: this.handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 43\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default art;","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/ReactWeb/app_1/src/pages/art.js"],"names":["React","ChromePicker","art","Component","state","displayColorPicker","handleClick","setState","handleClose","render","popover","position","zIndex","cover","top","right","bottom","left"],"mappings":"AAAA;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,aAA7B;;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,kBAAkB,EAAE;AADd,KADwB;;AAAA,SAKhCC,WALgC,GAKlB,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,kBAAkB,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAlC,OAAd;AACD,KAP+B;;AAAA,SAShCG,WATgC,GASlB,MAAM;AAClB,WAAKD,QAAL,CAAc;AAAEF,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACD,KAX+B;AAAA;;AAahCI,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG;AACdC,MAAAA,QAAQ,EAAE,UADI;AAEdC,MAAAA,MAAM,EAAE;AAFM,KAAhB;AAIA,UAAMC,KAAK,GAAG;AACZF,MAAAA,QAAQ,EAAE,OADE;AAEZG,MAAAA,GAAG,EAAE,KAFO;AAGZC,MAAAA,KAAK,EAAE,KAHK;AAIZC,MAAAA,MAAM,EAAE,KAJI;AAKZC,MAAAA,IAAI,EAAE;AALM,KAAd;AAOA,wBACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAG,KAAKX,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEI,KAAKF,KAAL,CAAWC,kBAAX,gBAAgC;AAAK,QAAA,KAAK,EAAGK,OAAb;AAAA,gCAChC;AAAK,UAAA,KAAK,EAAGG,KAAb;AAAqB,UAAA,OAAO,EAAG,KAAKL;AAApC;AAAA;AAAA;AAAA;AAAA,gBADgC,eAEhC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAFgC;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,GAGO,IALX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAlC+B;;AAqClC,eAAeN,GAAf","sourcesContent":["'use strict'\r\n\r\nimport React from 'react'\r\nimport { ChromePicker } from 'react-color'\r\n\r\nclass art extends React.Component {\r\n  state = {\r\n    displayColorPicker: false,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ displayColorPicker: false })\r\n  };\r\n\r\n  render() {\r\n    const popover = {\r\n      position: 'absolute',\r\n      zIndex: '2',\r\n    }\r\n    const cover = {\r\n      position: 'fixed',\r\n      top: '0px',\r\n      right: '0px',\r\n      bottom: '0px',\r\n      left: '0px',\r\n    }\r\n    return (\r\n      <div>\r\n        <button onClick={ this.handleClick }>Pick Color</button>\r\n        { this.state.displayColorPicker ? <div style={ popover }>\r\n          <div style={ cover } onClick={ this.handleClose }/>\r\n          <ChromePicker />\r\n        </div> : null }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default art\r\n"]},"metadata":{},"sourceType":"module"}